// Generated by view binder compiler. Do not edit!
package com.example.cyclingclub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cyclingclub.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEventManagementBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnAddEvent;

  @NonNull
  public final EditText editEventDuration;

  @NonNull
  public final EditText editEventName;

  @NonNull
  public final EditText editEventRegion;

  @NonNull
  public final EditText editEventTime;

  @NonNull
  public final EditText editEventType;

  @NonNull
  public final ListView listEvents;

  private ActivityEventManagementBinding(@NonNull RelativeLayout rootView,
      @NonNull Button btnAddEvent, @NonNull EditText editEventDuration,
      @NonNull EditText editEventName, @NonNull EditText editEventRegion,
      @NonNull EditText editEventTime, @NonNull EditText editEventType,
      @NonNull ListView listEvents) {
    this.rootView = rootView;
    this.btnAddEvent = btnAddEvent;
    this.editEventDuration = editEventDuration;
    this.editEventName = editEventName;
    this.editEventRegion = editEventRegion;
    this.editEventTime = editEventTime;
    this.editEventType = editEventType;
    this.listEvents = listEvents;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEventManagementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEventManagementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_event_management, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEventManagementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddEvent;
      Button btnAddEvent = ViewBindings.findChildViewById(rootView, id);
      if (btnAddEvent == null) {
        break missingId;
      }

      id = R.id.editEventDuration;
      EditText editEventDuration = ViewBindings.findChildViewById(rootView, id);
      if (editEventDuration == null) {
        break missingId;
      }

      id = R.id.editEventName;
      EditText editEventName = ViewBindings.findChildViewById(rootView, id);
      if (editEventName == null) {
        break missingId;
      }

      id = R.id.editEventRegion;
      EditText editEventRegion = ViewBindings.findChildViewById(rootView, id);
      if (editEventRegion == null) {
        break missingId;
      }

      id = R.id.editEventTime;
      EditText editEventTime = ViewBindings.findChildViewById(rootView, id);
      if (editEventTime == null) {
        break missingId;
      }

      id = R.id.editEventType;
      EditText editEventType = ViewBindings.findChildViewById(rootView, id);
      if (editEventType == null) {
        break missingId;
      }

      id = R.id.listEvents;
      ListView listEvents = ViewBindings.findChildViewById(rootView, id);
      if (listEvents == null) {
        break missingId;
      }

      return new ActivityEventManagementBinding((RelativeLayout) rootView, btnAddEvent,
          editEventDuration, editEventName, editEventRegion, editEventTime, editEventType,
          listEvents);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
