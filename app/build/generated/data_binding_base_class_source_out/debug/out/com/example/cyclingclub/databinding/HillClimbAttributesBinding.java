// Generated by view binder compiler. Do not edit!
package com.example.cyclingclub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cyclingclub.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HillClimbAttributesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText attribute1Hillclimb;

  @NonNull
  public final EditText attribute2Hillclimb;

  @NonNull
  public final EditText attribute3Hillclimb;

  @NonNull
  public final TextView attributesHillclimb;

  @NonNull
  public final Button btnApplyHillclimb;

  @NonNull
  public final Button btnBackHillclimb;

  @NonNull
  public final TextView hillClimbTitle;

  @NonNull
  public final ConstraintLayout linearLayout2;

  @NonNull
  public final TextView number2Hillclimb;

  @NonNull
  public final TextView number3Hillclimb;

  @NonNull
  public final TextView numberOneHillclimb;

  private HillClimbAttributesBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText attribute1Hillclimb, @NonNull EditText attribute2Hillclimb,
      @NonNull EditText attribute3Hillclimb, @NonNull TextView attributesHillclimb,
      @NonNull Button btnApplyHillclimb, @NonNull Button btnBackHillclimb,
      @NonNull TextView hillClimbTitle, @NonNull ConstraintLayout linearLayout2,
      @NonNull TextView number2Hillclimb, @NonNull TextView number3Hillclimb,
      @NonNull TextView numberOneHillclimb) {
    this.rootView = rootView;
    this.attribute1Hillclimb = attribute1Hillclimb;
    this.attribute2Hillclimb = attribute2Hillclimb;
    this.attribute3Hillclimb = attribute3Hillclimb;
    this.attributesHillclimb = attributesHillclimb;
    this.btnApplyHillclimb = btnApplyHillclimb;
    this.btnBackHillclimb = btnBackHillclimb;
    this.hillClimbTitle = hillClimbTitle;
    this.linearLayout2 = linearLayout2;
    this.number2Hillclimb = number2Hillclimb;
    this.number3Hillclimb = number3Hillclimb;
    this.numberOneHillclimb = numberOneHillclimb;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HillClimbAttributesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HillClimbAttributesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.hill_climb_attributes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HillClimbAttributesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attribute_1_hillclimb;
      EditText attribute1Hillclimb = ViewBindings.findChildViewById(rootView, id);
      if (attribute1Hillclimb == null) {
        break missingId;
      }

      id = R.id.attribute_2_hillclimb;
      EditText attribute2Hillclimb = ViewBindings.findChildViewById(rootView, id);
      if (attribute2Hillclimb == null) {
        break missingId;
      }

      id = R.id.attribute_3_hillclimb;
      EditText attribute3Hillclimb = ViewBindings.findChildViewById(rootView, id);
      if (attribute3Hillclimb == null) {
        break missingId;
      }

      id = R.id.attributes_hillclimb;
      TextView attributesHillclimb = ViewBindings.findChildViewById(rootView, id);
      if (attributesHillclimb == null) {
        break missingId;
      }

      id = R.id.btn_apply_hillclimb;
      Button btnApplyHillclimb = ViewBindings.findChildViewById(rootView, id);
      if (btnApplyHillclimb == null) {
        break missingId;
      }

      id = R.id.btn_back_hillclimb;
      Button btnBackHillclimb = ViewBindings.findChildViewById(rootView, id);
      if (btnBackHillclimb == null) {
        break missingId;
      }

      id = R.id.hillClimbTitle;
      TextView hillClimbTitle = ViewBindings.findChildViewById(rootView, id);
      if (hillClimbTitle == null) {
        break missingId;
      }

      ConstraintLayout linearLayout2 = (ConstraintLayout) rootView;

      id = R.id.number_2_hillclimb;
      TextView number2Hillclimb = ViewBindings.findChildViewById(rootView, id);
      if (number2Hillclimb == null) {
        break missingId;
      }

      id = R.id.number_3_hillclimb;
      TextView number3Hillclimb = ViewBindings.findChildViewById(rootView, id);
      if (number3Hillclimb == null) {
        break missingId;
      }

      id = R.id.number_one_hillclimb;
      TextView numberOneHillclimb = ViewBindings.findChildViewById(rootView, id);
      if (numberOneHillclimb == null) {
        break missingId;
      }

      return new HillClimbAttributesBinding((ConstraintLayout) rootView, attribute1Hillclimb,
          attribute2Hillclimb, attribute3Hillclimb, attributesHillclimb, btnApplyHillclimb,
          btnBackHillclimb, hillClimbTitle, linearLayout2, number2Hillclimb, number3Hillclimb,
          numberOneHillclimb);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
