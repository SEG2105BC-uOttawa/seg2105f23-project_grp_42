// Generated by view binder compiler. Do not edit!
package com.example.cyclingclub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cyclingclub.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RegistrationListBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Switch switchAccept;

  @NonNull
  public final Switch switchAward;

  @NonNull
  public final TextView textEventName;

  @NonNull
  public final TextView textParticipant;

  @NonNull
  public final TextView textView21;

  @NonNull
  public final TextView textView28;

  private RegistrationListBinding(@NonNull LinearLayout rootView, @NonNull Switch switchAccept,
      @NonNull Switch switchAward, @NonNull TextView textEventName,
      @NonNull TextView textParticipant, @NonNull TextView textView21,
      @NonNull TextView textView28) {
    this.rootView = rootView;
    this.switchAccept = switchAccept;
    this.switchAward = switchAward;
    this.textEventName = textEventName;
    this.textParticipant = textParticipant;
    this.textView21 = textView21;
    this.textView28 = textView28;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RegistrationListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RegistrationListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.registration_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RegistrationListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.switchAccept;
      Switch switchAccept = ViewBindings.findChildViewById(rootView, id);
      if (switchAccept == null) {
        break missingId;
      }

      id = R.id.switchAward;
      Switch switchAward = ViewBindings.findChildViewById(rootView, id);
      if (switchAward == null) {
        break missingId;
      }

      id = R.id.textEventName;
      TextView textEventName = ViewBindings.findChildViewById(rootView, id);
      if (textEventName == null) {
        break missingId;
      }

      id = R.id.textParticipant;
      TextView textParticipant = ViewBindings.findChildViewById(rootView, id);
      if (textParticipant == null) {
        break missingId;
      }

      id = R.id.textView21;
      TextView textView21 = ViewBindings.findChildViewById(rootView, id);
      if (textView21 == null) {
        break missingId;
      }

      id = R.id.textView28;
      TextView textView28 = ViewBindings.findChildViewById(rootView, id);
      if (textView28 == null) {
        break missingId;
      }

      return new RegistrationListBinding((LinearLayout) rootView, switchAccept, switchAward,
          textEventName, textParticipant, textView21, textView28);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
