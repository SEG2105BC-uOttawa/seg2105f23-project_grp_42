// Generated by view binder compiler. Do not edit!
package com.example.cyclingclub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cyclingclub.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnProfileUpdate;

  @NonNull
  public final TextInputEditText editContact;

  @NonNull
  public final TextInputEditText editMediaLink;

  @NonNull
  public final TextInputEditText editName;

  @NonNull
  public final TextInputEditText editPhoneNumber;

  @NonNull
  public final TextInputEditText editRegion;

  @NonNull
  public final TextView profileTitle;

  private FragmentProfileBinding(@NonNull LinearLayout rootView, @NonNull Button btnProfileUpdate,
      @NonNull TextInputEditText editContact, @NonNull TextInputEditText editMediaLink,
      @NonNull TextInputEditText editName, @NonNull TextInputEditText editPhoneNumber,
      @NonNull TextInputEditText editRegion, @NonNull TextView profileTitle) {
    this.rootView = rootView;
    this.btnProfileUpdate = btnProfileUpdate;
    this.editContact = editContact;
    this.editMediaLink = editMediaLink;
    this.editName = editName;
    this.editPhoneNumber = editPhoneNumber;
    this.editRegion = editRegion;
    this.profileTitle = profileTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnProfileUpdate;
      Button btnProfileUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnProfileUpdate == null) {
        break missingId;
      }

      id = R.id.editContact;
      TextInputEditText editContact = ViewBindings.findChildViewById(rootView, id);
      if (editContact == null) {
        break missingId;
      }

      id = R.id.editMediaLink;
      TextInputEditText editMediaLink = ViewBindings.findChildViewById(rootView, id);
      if (editMediaLink == null) {
        break missingId;
      }

      id = R.id.editName;
      TextInputEditText editName = ViewBindings.findChildViewById(rootView, id);
      if (editName == null) {
        break missingId;
      }

      id = R.id.editPhoneNumber;
      TextInputEditText editPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (editPhoneNumber == null) {
        break missingId;
      }

      id = R.id.editRegion;
      TextInputEditText editRegion = ViewBindings.findChildViewById(rootView, id);
      if (editRegion == null) {
        break missingId;
      }

      id = R.id.profileTitle;
      TextView profileTitle = ViewBindings.findChildViewById(rootView, id);
      if (profileTitle == null) {
        break missingId;
      }

      return new FragmentProfileBinding((LinearLayout) rootView, btnProfileUpdate, editContact,
          editMediaLink, editName, editPhoneNumber, editRegion, profileTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
