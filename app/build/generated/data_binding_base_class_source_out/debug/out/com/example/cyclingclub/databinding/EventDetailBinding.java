// Generated by view binder compiler. Do not edit!
package com.example.cyclingclub.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cyclingclub.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EventDetailBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button btnEventDelete;

  @NonNull
  public final Button btnEventUpdate;

  @NonNull
  public final Button btnRegister;

  @NonNull
  public final EditText editEventDate;

  @NonNull
  public final EditText editEventDistance;

  @NonNull
  public final EditText editEventElevation;

  @NonNull
  public final EditText editEventFee;

  @NonNull
  public final EditText editEventId;

  @NonNull
  public final EditText editEventLimit;

  @NonNull
  public final EditText editEventRegion;

  @NonNull
  public final EditText editEventRoute;

  @NonNull
  public final EditText editEventType;

  @NonNull
  public final TextView eventTypeDetail;

  @NonNull
  public final Spinner spinnerLevel;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView textview;

  @NonNull
  public final TextView textview11;

  @NonNull
  public final TextView textview12;

  @NonNull
  public final TextView textview13;

  @NonNull
  public final TextView textview3;

  @NonNull
  public final TextView textview4;

  @NonNull
  public final TextView textview7;

  private EventDetailBinding(@NonNull RelativeLayout rootView, @NonNull Button btnEventDelete,
      @NonNull Button btnEventUpdate, @NonNull Button btnRegister, @NonNull EditText editEventDate,
      @NonNull EditText editEventDistance, @NonNull EditText editEventElevation,
      @NonNull EditText editEventFee, @NonNull EditText editEventId,
      @NonNull EditText editEventLimit, @NonNull EditText editEventRegion,
      @NonNull EditText editEventRoute, @NonNull EditText editEventType,
      @NonNull TextView eventTypeDetail, @NonNull Spinner spinnerLevel,
      @NonNull TextView textView10, @NonNull TextView textView5, @NonNull TextView textView6,
      @NonNull TextView textview, @NonNull TextView textview11, @NonNull TextView textview12,
      @NonNull TextView textview13, @NonNull TextView textview3, @NonNull TextView textview4,
      @NonNull TextView textview7) {
    this.rootView = rootView;
    this.btnEventDelete = btnEventDelete;
    this.btnEventUpdate = btnEventUpdate;
    this.btnRegister = btnRegister;
    this.editEventDate = editEventDate;
    this.editEventDistance = editEventDistance;
    this.editEventElevation = editEventElevation;
    this.editEventFee = editEventFee;
    this.editEventId = editEventId;
    this.editEventLimit = editEventLimit;
    this.editEventRegion = editEventRegion;
    this.editEventRoute = editEventRoute;
    this.editEventType = editEventType;
    this.eventTypeDetail = eventTypeDetail;
    this.spinnerLevel = spinnerLevel;
    this.textView10 = textView10;
    this.textView5 = textView5;
    this.textView6 = textView6;
    this.textview = textview;
    this.textview11 = textview11;
    this.textview12 = textview12;
    this.textview13 = textview13;
    this.textview3 = textview3;
    this.textview4 = textview4;
    this.textview7 = textview7;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EventDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EventDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.event_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EventDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnEventDelete;
      Button btnEventDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnEventDelete == null) {
        break missingId;
      }

      id = R.id.btnEventUpdate;
      Button btnEventUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnEventUpdate == null) {
        break missingId;
      }

      id = R.id.btnRegister;
      Button btnRegister = ViewBindings.findChildViewById(rootView, id);
      if (btnRegister == null) {
        break missingId;
      }

      id = R.id.editEventDate;
      EditText editEventDate = ViewBindings.findChildViewById(rootView, id);
      if (editEventDate == null) {
        break missingId;
      }

      id = R.id.editEventDistance;
      EditText editEventDistance = ViewBindings.findChildViewById(rootView, id);
      if (editEventDistance == null) {
        break missingId;
      }

      id = R.id.editEventElevation;
      EditText editEventElevation = ViewBindings.findChildViewById(rootView, id);
      if (editEventElevation == null) {
        break missingId;
      }

      id = R.id.editEventFee;
      EditText editEventFee = ViewBindings.findChildViewById(rootView, id);
      if (editEventFee == null) {
        break missingId;
      }

      id = R.id.editEventId;
      EditText editEventId = ViewBindings.findChildViewById(rootView, id);
      if (editEventId == null) {
        break missingId;
      }

      id = R.id.editEventLimit;
      EditText editEventLimit = ViewBindings.findChildViewById(rootView, id);
      if (editEventLimit == null) {
        break missingId;
      }

      id = R.id.editEventRegion;
      EditText editEventRegion = ViewBindings.findChildViewById(rootView, id);
      if (editEventRegion == null) {
        break missingId;
      }

      id = R.id.editEventRoute;
      EditText editEventRoute = ViewBindings.findChildViewById(rootView, id);
      if (editEventRoute == null) {
        break missingId;
      }

      id = R.id.editEventType;
      EditText editEventType = ViewBindings.findChildViewById(rootView, id);
      if (editEventType == null) {
        break missingId;
      }

      id = R.id.eventTypeDetail;
      TextView eventTypeDetail = ViewBindings.findChildViewById(rootView, id);
      if (eventTypeDetail == null) {
        break missingId;
      }

      id = R.id.spinnerLevel;
      Spinner spinnerLevel = ViewBindings.findChildViewById(rootView, id);
      if (spinnerLevel == null) {
        break missingId;
      }

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.textview;
      TextView textview = ViewBindings.findChildViewById(rootView, id);
      if (textview == null) {
        break missingId;
      }

      id = R.id.textview11;
      TextView textview11 = ViewBindings.findChildViewById(rootView, id);
      if (textview11 == null) {
        break missingId;
      }

      id = R.id.textview12;
      TextView textview12 = ViewBindings.findChildViewById(rootView, id);
      if (textview12 == null) {
        break missingId;
      }

      id = R.id.textview13;
      TextView textview13 = ViewBindings.findChildViewById(rootView, id);
      if (textview13 == null) {
        break missingId;
      }

      id = R.id.textview3;
      TextView textview3 = ViewBindings.findChildViewById(rootView, id);
      if (textview3 == null) {
        break missingId;
      }

      id = R.id.textview4;
      TextView textview4 = ViewBindings.findChildViewById(rootView, id);
      if (textview4 == null) {
        break missingId;
      }

      id = R.id.textview7;
      TextView textview7 = ViewBindings.findChildViewById(rootView, id);
      if (textview7 == null) {
        break missingId;
      }

      return new EventDetailBinding((RelativeLayout) rootView, btnEventDelete, btnEventUpdate,
          btnRegister, editEventDate, editEventDistance, editEventElevation, editEventFee,
          editEventId, editEventLimit, editEventRegion, editEventRoute, editEventType,
          eventTypeDetail, spinnerLevel, textView10, textView5, textView6, textview, textview11,
          textview12, textview13, textview3, textview4, textview7);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
